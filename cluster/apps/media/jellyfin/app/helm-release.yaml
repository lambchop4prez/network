---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.1.0/charts/other/app-template/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1001
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
          nodeSelector:
            nvidia.feature.node.kubernetes.io/gpu: "true"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: nvidia.feature.node.kubernetes.io/gpu
                        operator: In
                        values:
                          - "true"
        containers:
          main:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.9.11@sha256:fc1b51f4be3fba725e42dae2022d9c6a5b069acce01bef04d32fdee025dc511e
            env:
              TZ: "America/Detroit"
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 500000000
              NVIDIA_VISIBLE_DEVICES: all
              NVIDIA_DRIVER_CAPABILITIES: all
            resources:
              requests:
                memory: 250Mi
                cpu: 20m
                nvidia.com/gpu: 1
              limits:
                memory: 1500Mi
                nvidia.com/gpu: 1
    service:
      main:
        controller: main
        ports:
          http:
            port: 8096
    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "step"
        hosts:
          - host: &host "jellyfin.lan"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: jellyfin-cert
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        storageClass: "ceph-block"
        size: 1Gi
        accessMode: ReadWriteOnce
        retain: true
      media:
        existingClaim: nas-media
