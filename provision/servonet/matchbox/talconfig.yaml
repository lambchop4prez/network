---
clusterName: servonet
endpoint: https://10.4.3.1:6443
# domain: servonet.lan

talosVersion: v1.8.1
kubernetesVersion: v1.31.1

allowSchedulingOnControlPlanes: true

cniConfig:
  name: none

additionalMachineCertSans: &san
  - cluster.local
  - servonet.lan
  - 127.0.0.1
additionalApiServerCertSans: *san

nodes:
  # - hostname: tom-364c.servonet.lan
  #   nameservers:
  #     - 10.4.1.1
  #   ipAddress: "10.4.3.32"
  #   controlPlane: true
  #   installDisk: /dev/sda
  #   networkInterfaces:
  #     - deviceSelector:
  #         hardwareAddr: "dc:a6:32:bb:36:4c"
  #       addresses:
  #         - 10.4.3.32/16
  #       routes:
  #         - network: 0.0.0.0/0 # The route's network (destination).
  #           gateway: 10.4.1.1 # The route's gateway (if empty, creates link scope route).
  #           metric: 1024 # The optional metric for the route.
  #       mtu: 1500
  #       vip:
  #         ip: "10.4.3.1"

  # - hostname: tom-3a11.servonet.lan
  #   nameservers:
  #     - 10.4.1.1
  #   ipAddress: "10.4.3.33"
  #   controlPlane: true
  #   installDisk: /dev/sda
  #   networkInterfaces:
  #     - deviceSelector:
  #         hardwareAddr: "e4:5f:01:2f:3a:11"
  #       addresses:
  #         - 10.4.3.33/16
  #       routes:
  #         - network: 0.0.0.0/0 # The route's network (destination).
  #           gateway: 10.4.1.1 # The route's gateway (if empty, creates link scope route).
  #           metric: 1024 # The optional metric for the route.
  #       mtu: 1500
  #       vip:
  #         ip: "10.4.3.1"

  # - hostname: tom-3e67.servonet.lan
  #   nameservers:
  #     - 10.4.1.1
  #   ipAddress: "10.4.3.34"
  #   controlPlane: true
  #   installDisk: /dev/mmcblk1
  #   networkInterfaces:
  #     - interface: eth0
  #       addresses:
  #         - 10.4.3.34/16
  #       routes:
  #         - network: 0.0.0.0/0 # The route's network (destination).
  #           gateway: 10.4.1.1 # The route's gateway (if empty, creates link scope route).
  #           metric: 1024 # The optional metric for the route.
  #       mtu: 1500
  #       vip:
  #         ip: "10.4.3.1"

  - hostname: tom-c342.servonet.lan
    nameservers:
      - 10.4.1.1
    ipAddress: "10.4.3.32"
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "de:ad:be:ef:c3:42"
        addresses:
          - 10.4.3.32/16
        routes:
          - network: 0.0.0.0/0 # The route's network (destination).
            gateway: 10.4.1.1 # The route's gateway (if empty, creates link scope route).
            metric: 1024 # The optional metric for the route.
        mtu: 1500
        vip:
          ip: "10.4.3.1"

  - hostname: tom-c469.servonet.lan
    nameservers:
      - 10.4.1.1
    ipAddress: "10.4.3.33"
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "de:ad:be:ef:c4:69"
        addresses:
          - 10.4.3.33/16
        routes:
          - network: 0.0.0.0/0 # The route's network (destination).
            gateway: 10.4.1.1 # The route's gateway (if empty, creates link scope route).
            metric: 1024 # The optional metric for the route.
        mtu: 1500
        vip:
          ip: "10.4.3.1"
    patches:
      - |-
        machine:
          kernel:
            modules:
              - name: nvidia
              - name: nvidia_uvm
              - name: nvidia_drm
              - name: nvidia_modeset
          sysctls:
            net.core.bpf_jit_harden: 1

  - hostname: tom-c587.servonet.lan
    nameservers:
      - 10.4.1.1
    ipAddress: "10.4.3.34"
    controlPlane: true
    installDisk: /dev/sda
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "de:ad:be:ef:c5:87"
        addresses:
          - 10.4.3.34/16
        routes:
          - network: 0.0.0.0/0 # The route's network (destination).
            gateway: 10.4.1.1 # The route's gateway (if empty, creates link scope route).
            metric: 1024 # The optional metric for the route.
        mtu: 1500
        vip:
          ip: "10.4.3.1"

controlPlane:
  patches:
    # Enable kubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        proxy:
          disabled: true
    - |-
      machine:
        kubelet:
          nodeIP:
            validSubnets:
              - 10.4.0.0/16

    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.4.0.0/16
    - |-
      cluster:
        network:
          podSubnets:
            - 10.244.0.0/16
          serviceSubnets:
            - 10.96.0.0/16
